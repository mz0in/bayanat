version: '3'

services:
  postgres:
    container_name: postgres
    image: 'postgis/postgis:15-3.3'
    env_file:
      - ${ENV_FILE:-.env}
    volumes:
      - 'postgres_data:/var/lib/postgresql/data'
    ports:
      - '127.0.0.1:5432:5432'
    read_only: true
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /var/run/postgresql
    healthcheck:
      test: "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"
      interval: 3s
      retries: 10

  redis:
    container_name: redis
    image: 'redis:latest'
    ports:
      - '127.0.0.1:6379:6379'
    command: redis-server --requirepass '${REDIS_PASSWORD}'
    read_only: true
    security_opt:
      - no-new-privileges:true
    volumes:
      - './redis-data:/var/lib/redis/data:rw'
    healthcheck:
      test: [ "CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD}", "ping" ]
      interval: 3s
      retries: 10

  bayanat:
    container_name: bayanat
    image: python:3.10-slim
    build:
      context: .
      dockerfile: ./flask/Dockerfile
      args:
        - ROLE=flask
        - ENV_FILE=${ENV_FILE:-.env}
    volumes:
      - 'postgres_data:/var/lib/postgresql/data'
      - 'redis_data:/var/lib/redis/data'
      - '${MEDIA_PATH:-./enferno/media}:/app/enferno/media:rw'
      - './enferno/imports:/app/enferno/imports:rw'
      - './logs:/app/logs:rw'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    read_only: true
    tmpfs:
      - /tmp
    security_opt:
      - no-new-privileges:true
    ports:
      - '127.0.0.1:5000:5000'

  celery:
    container_name: celery
    image: python:3.10-slim
    build:
      context: .
      dockerfile: ./celery/Dockerfile
      args:
        - ROLE=celery
        - ENV_FILE=${ENV_FILE:-.env}
    volumes_from:
      - bayanat
    read_only: true
    tmpfs:
      - /tmp
    security_opt:
      - no-new-privileges:true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  nginx:
    container_name: nginx
    restart: always
    image: 'bitnami/nginx:latest'
    ports:
      - '80:80'
    volumes:
      - './enferno/static/:/app/static/:ro'
      - './nginx/nginx.conf:/opt/bitnami/nginx/conf/nginx.conf:ro'
      - './nginx/bayanat.conf:/opt/bitnami/nginx/conf/server_blocks/bayanat.conf:ro'
    depends_on:
      - bayanat
    read_only: true
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /opt/bitnami/nginx/tmp/
    healthcheck:
      test: [ "CMD", "service", "nginx", "status" ]
      interval: 3s
      retries: 10
  
  volumes:
  redis_data:
  postgres_data:

volumes:
  redis_data:
  postgres_data:
